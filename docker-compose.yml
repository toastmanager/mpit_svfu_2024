services:
  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile.prod
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=(Host(`${HOST}`))
      - traefik.http.services.backend.loadbalancer.server.port=8000
      - traefik.http.routers.backend.entrypoints=backend
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DB_HOST: db
      PORT: 8000
    deploy:
      mode: replicas
      replicas: 3
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
        failure_action: rollback
    depends_on:
      reverse-proxy:
        condition: service_started
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    labels:
      - traefik.enable=true
      - traefik.http.services.frontend.loadbalancer.server.port=3000
      - traefik.http.routers.frontend.entrypoints=frontend
      - traefik.http.routers.frontend.rule=(Host(`${HOST}`))
    env_file:
      - .env
    environment:
      NEXT_PUBLIC_BACKEND_URL: backend
      PORT: 3000

  db:
    image: pgvector/pgvector:pg17
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  storage:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - storage-data:/data
    command: server /data --console-address ":9001"

  pg_admin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PG_ADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PG_ADMIN_PASSWORD}
    ports:
      - 127.0.0.1:5050:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    

  reverse-proxy:
    image: traefik
    command:
      --api.insecure=true
      --providers.docker=true
      --entryPoints.backend.address=:8000
      --entryPoints.frontend.address=:80
    ports:
      - "80:80"
      - "8000:8000"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  db-data:
  pgadmin-data:
  storage-data: